import React, { useState } from "react";
import { Link } from "react-router-dom";

// Page for the register screen.
const RegisterPage = () => {
  const [usernameValue, setUsername] = useState("");
  const [passwordValue, setPassword] = useState("");
  const [isPasswordTouched, setPasswordTouched] = useState(false);

  const handlePasswordChange = (e) => {
    const value = e.target.value;
    setPassword(value);
    if (value === "") {
      setPasswordTouched(true);
    } else {
      setPasswordTouched(false);
    }
  };

  // Function to handle a register request.
  const handleRegister = (event) => {
    event.preventDefault();  // Prevent default form submission behavior

    async function register() {
      // Store the data to send to the backend.
      const data = {
        username: usernameValue,
        password: passwordValue,
      };

      // Try-catch to make a request to the backend with the URL, type of method, JSON content, and the data.
      try {
        const response = await fetch("http://127.0.0.1:5000/register", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        // If no error was generated in the backend, then the registration attempt was successful.
        if (response.ok) {
          alert("Successfully registered. Proceed to login.");
        } else {
          // If an error was generated by the backend, then it is likely that the username was already taken.
          alert("Username already taken.");
        }
      } catch (error) {
        // If we reach this point, that means there was an error trying to reach the backend endpoint for registration.
        alert("error with endpoint");
        console.log("error with endpoint", error);
      }
    }

    register();
  };

  return (
    <div className="flex justify-center items-center min-h-screen bg-gray-100">
      <div className="w-full max-w-xs">
        <form className="inputFields">
          <h2 className="pb-4">Register</h2>
          <div className="mb-4">
            <label className="label" htmlFor="username">
              Username
            </label>
            <input
              className="inputForm"
              type="text"
              id="username"
              value={usernameValue}
              onChange={(e) => setUsername(e.target.value)}
              placeholder="Enter your username"
            />
          </div>
          <div className="mb-6">
            <label className="label" htmlFor="password">
              Password
            </label>
            <input
              className="inputForm"
              type="password"
              id="password"
              value={passwordValue}
              onChange={handlePasswordChange}
              placeholder="Enter your password"
              onBlur={() => setPasswordTouched(passwordValue === "")}
            />
            {isPasswordTouched && passwordValue === "" && (
              <p className="text-red-500 text-xs italic mt-1">
                Please choose a password.
              </p>
            )}
          </div>
          <div className="flex items-center justify-center">
            {usernameValue !== "" && passwordValue !== "" && (
              <button
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                onClick={handleRegister}
              >
                Register
              </button>
            )}
          </div>
          <p className="text-center text-gray-500 text-xs mt-4">
            Already have an account?{" "}
            <a
              href="/"
              className="text-blue-500 hover:text-blue-800 font-bold text-sm"
            >
              Login
            </a>
          </p>
        </form>
      </div>
    </div>
  );
};

export default RegisterPage;
